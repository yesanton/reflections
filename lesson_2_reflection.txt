What happens when you initialize a repository? Why do you need to do it?

	When I do initialize repository the configuration files are added to the initial folder
	that define the git commit system.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is the intermite area for git that is the connection between the git repository and working directory. Its purpose is to give the user the chanse to collect the files for the commit, therefore not requiring the user to type all the files to be commited at once in the directory.

How can you use the staging area to make sure you have one commit per logical
change?

	you can add your files to staging area and then run diff or diff --staged between the
	working directory and staged area or staged area and git repository

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	There are plenty of sityations when branching helps. For instance you've decided to make a new bonus level to your game but not sure that it'll work out. So, create new branch and add this feature to the game.

How do the diagrams help you visualize the branch structure?

	Diagrams help to visualize the branch structure in a way that it becomes obvious where and when the branches were created and which changes are saved or discarded.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	The two merged branches is the one branch that represents all the features added to the 
	both branches. The diagram represents the commits that are being merged, so its convenient.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
	
	It is impossible to know if you are merging the files that are consistent in a way that 
	any on two do not break the overall logic of the program, therefore it is better to do commits manually.